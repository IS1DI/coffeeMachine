plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.hibernate.orm' version '6.3.1.Final'
}

group = 'com.is1di'
version = '0.0.2'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
ext {
    set('testcontainers.version', "1.19.3")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('buildDocker', Exec) {
    dependsOn build
    workingDir "$projectDir"
    commandLine 'docker', 'build', '--rm', '.', '-t', "${project.group.split("\\.").last()}/${project.name.toLowerCase()}:$project.version", "-f", "$projectDir/Dockerfile"
}

tasks.register('runDocker', Exec) {
    dependsOn buildDocker
    workingDir "$projectDir"
    commandLine 'docker', 'run', "${project.group.split("\\.").last()}/${project.name.toLowerCase()}:$project.version"
}

tasks.register('pushDocker', Exec) {
    dependsOn buildDocker
    workingDir "$projectDir"
    commandLine 'docker', 'push', "${project.group.split("\\.").last()}/${project.name.toLowerCase()}:$project.version"
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

